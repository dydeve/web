def vJavaLang = '1.8'

def libProjects = [project(':site'),
                   project(':monitor')]

def javaProjects = libProjects

buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
        springVersion = '4.1.6.RELEASE'
    }
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

configure(allprojects) {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    version = '1.1.2'

    idea.module {
        excludeDirs += [
                file('bin'),      // containing build artifacts from Eclipse (if any)
                file('work'),     // containing transient artifacts used by embedded Tomcat
                file('logs'),     // containing app logs written by embedded Tomcat
                file('data'),     // containing logs and data written by elasticsearch
                file('.settings') // containing intentionally checked-in Eclipse metadata
        ]
    }
}

apply plugin: 'java'

project.ext {
    aspectjVersion = '1.8.5'
}

dependencies {

    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile 'com.google.protobuf:protobuf-java:2.6.1'
    compile 'com.googlecode.protobuf-java-format:protobuf-java-format:1.2'
    compile group: 'com.google.guava', name: 'guava', version: '22.0'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.35'


    // optional dependencies below
    compile 'org.apache.tomcat.embed:tomcat-embed-core:8.0.20'

    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testCompile "cglib:cglib-nodep:3.1"
    testCompile("com.athaydes:spock-reports:1.2.12") {
        transitive = false // this avoids affecting your version of Groovy/Spock
    }
}

def hystrixVersion = '1.5.3'
def logbackVersion = '1.1.3'
def slf4jVersion = '1.7.11'

configure(javaProjects) {
    apply plugin: 'java'
    apply plugin: 'groovy'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    targetCompatibility = vJavaLang
    sourceCompatibility = vJavaLang

    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile "org.springframework:spring-web:${springVersion}"
        compile "org.springframework:spring-webmvc:${springVersion}"
        compile 'com.google.protobuf:protobuf-java:2.6.1'
        compile 'com.googlecode.protobuf-java-format:protobuf-java-format:1.2'
        compile group: 'com.google.guava', name: 'guava', version: '22.0'
        compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.35'

        compile ("org.aspectj:aspectjrt:$aspectjVersion")
        compile ("org.aspectj:aspectjtools:$aspectjVersion")
        compile ("org.aspectj:aspectjweaver:$aspectjVersion")

        compile "ch.qos.logback:logback-core:${logbackVersion}"
        compile "ch.qos.logback:logback-classic:${logbackVersion}"
        compile "org.slf4j:slf4j-api:${slf4jVersion}"

        // optional dependencies below
        compile 'org.apache.tomcat.embed:tomcat-embed-core:8.0.20'

        testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
        testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
        testCompile "cglib:cglib-nodep:3.1"
        testCompile("com.athaydes:spock-reports:1.2.12") {
            transitive = false // this avoids affecting your version of Groovy/Spock
        }
    }

    // Ensure that all Gradle-compiled classes are available to Eclipse's
    // classpath.
    eclipseClasspath.dependsOn testClasses

    // Skip generation and removal of .settings/org.eclipse.jdt.core.prefs files
    // during the normal `gradle eclipse` / `gradle cleanEclipse` lifecycle, as
    // these files have been checked in with formatting settings imported from
    // style/sagan-format.xml and style/sagan.importorder.
    // See http://www.gradle.org/docs/current/userguide/eclipse_plugin.html
    eclipseJdt.onlyIf { false }
    cleanEclipseJdt.onlyIf { false }
}

repositories {
    mavenLocal()
    jcenter()
}